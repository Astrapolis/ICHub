type CanisterMeta = record {
    moudule_hash : blob;
    controller: principal;
    time_updated: nat64;
    did_file: text;
};

type CanisterCall = record {
  canister_id : principal;
  function_name : text;
  params : text;
  result : blob;
};

type CanisterConfig = record {
  canister_id : principal;
  time_updated: nat64;
  is_active : bool;
  is_public: bool;
  config: text;
  meta_data: vec CanisterMeta };

type UserConfigDisplay = record {
  user : principal;
  ui_config : text;
  calls_limit: nat16;
  canister_configs : vec CanisterConfig;
  canister_calls : vec CanisterCall;
};

service ICHub : {
  user_init : (nat32, text, vec CanisterConfig) -> ();
  cache_ui_config : (text) -> ();
  cache_canister_config : (vec CanisterConfig) -> ();
  cache_canister_calls : (vec CanisterCall) -> ();
  get_user_config : () -> (UserConfigDisplay) query;
  get_canister_calls: (opt principal, opt text, opt nat16 ) -> (vec CanisterCall) query;
  get_public_configs: () -> (CanisterConfig) query;
  did_to_js: (text) -> (opt text) query;
}