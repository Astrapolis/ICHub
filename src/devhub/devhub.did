type StateMeta = record {
    is_public : bool;
    user_configs_limit : nat16;
    calls_limit: nat32;
};

type CanisterCallEvent = record {
    time_at: nat64;
    caller: principal;
    params: text;
    result: blob;
};

type CanisterCall = record {
  canister_id : principal;
  function_name : text;
  event: opt CanisterCallEvent;
};

type TestCaseView = record {
    test_case_id : opt nat16;
    tag: text;
    config: text;
    time_at: nat64;
    canister_calls: vec CanisterCall;
};

type TestCaseFilter = variant {
    tag : text;
    test_case_id : nat16;
};

type CanisterConfig = record {
  canister_id : principal;
  time_updated: nat64;
  is_active : bool;
  is_public: bool;
  config: text;
  meta_data: vec text;
};

type UserConfigViewPrivate = record {
  users : vec principal;
  ui_config : text;
  calls_limit: nat32;
  canister_configs : vec CanisterConfig;
  canister_calls : vec CanisterCall;
  test_cases : vec TestCaseView;
  mem_size : nat32;
};

type UserConfigViewPublic = record {
  users : vec principal;
  ui_config : text;
  canister_configs : vec CanisterConfig;
};

type CallResult = variant {
  Authenticated : text;
  UnAuthenticated: text;
};

type GetConfigResult = variant {
  Authenticated : UserConfigViewPrivate;
  UnAuthenticated: UserConfigViewPublic;
};

type GetCallResult = variant {
  Authenticated : vec CanisterCall;
  UnAuthenticated: text;
};

type GetTestResult = variant {
  Authenticated : vec TestCaseView;
  UnAuthenticated: text;
};

service devhub : {
  init : (principal, nat32, text, bool, nat16) -> ();
  update_state_meta : (StateMeta) -> (CallResult);
  add_user_to_existing_user_config: (nat16, principal) -> (CallResult);
  add_user_config : (text) -> (CallResult);
  cache_ui_config : (nat16, text) -> (CallResult);
  cache_canister_config : (nat16, CanisterConfig) -> (CallResult);
  cache_canister_calls : (nat16, vec CanisterCall) -> (CallResult);
  cache_test_case: (nat16, TestCaseView) -> (CallResult);
  check_user_config_size: (nat16) -> (opt nat32);
  get_user_config : (nat16) -> (GetConfigResult) query;
  get_canister_calls: (nat16, opt principal, opt text, opt nat16 ) -> (GetCallResult) query;
  get_test_cases: (nat16, opt TestCaseFilter, opt nat16 ) -> (GetTestResult) query;
  get_principal: () -> (principal) query;
  did_to_js: (text) -> (opt text) query;
}